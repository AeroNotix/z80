(in-package :z80-tests)

(def-suite registers)
(in-suite registers)

(defun test-registers ()
  (run! 'registers))

(def-test maintain-register-invariants (:suite registers)
  (let ((registers (list #'z80::set-reg-a #'z80::set-reg-b #'z80::set-reg-c #'z80::set-reg-d #'z80::set-reg-e #'z80::set-reg-h #'z80::set-reg-l))
        (c (make-instance 'z80::cpu)))
    (loop for register in registers
       do (funcall register c (random 255)))
    (is (eq (z80::reg-f c) (logand (z80::reg-af c) #x00FF)))
    (is (eq (z80::reg-c c) (logand (z80::reg-bc c) #x00FF)))
    (is (eq (z80::reg-e c) (logand (z80::reg-de c) #x00FF)))
    (is (eq (z80::reg-l c) (logand (z80::reg-hl c) #x00FF)))
    (is (eq (z80::reg-af c) (logior (ash (z80::reg-a c) 8) (z80::reg-f c))))
    (is (eq (z80::reg-bc c) (logior (ash (z80::reg-b c) 8) (z80::reg-c c))))
    (is (eq (z80::reg-de c) (logior (ash (z80::reg-d c) 8) (z80::reg-e c))))
    (is (eq (z80::reg-hl c) (logior (ash (z80::reg-h c) 8) (z80::reg-l c))))
    (is (eq (z80::reg-a c) (ash (z80::reg-af c) -8)))
    (is (eq (z80::reg-b c) (ash (z80::reg-bc c) -8)))
    (is (eq (z80::reg-d c) (ash (z80::reg-de c) -8)))
    (is (eq (z80::reg-h c) (ash (z80::reg-hl c) -8)))))
